{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","business","this","props","react_default","a","createElement","className","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","event","searchYelp","preventDefault","_this2","keys","sortByOptions","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","target","value","renderSortByOptions","placeholder","onChange","Best Match","Highest Rated","Most Reviewed","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","_Component","inherits","createClass","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a97e24fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css'; \r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n      const { business } = this.props;\r\n\r\n        return (\r\n        <div className=\"Business\">\r\n  <div className=\"image-container\">\r\n    <img src={business.imageSrc} alt={ business.name } />\r\n  </div>\r\n  <h2>{ business.name }</h2>\r\n  <div className=\"Business-information\">\r\n    <div className=\"Business-address\">\r\n      <p>{ business.address }</p>\r\n      <p>{ business.city }</p>\r\n      <p>{ business.state } { business.zipCode }</p>\r\n    </div>\r\n    <div className=\"Business-reviews\">\r\n      <h3>{ business.category }</h3>\r\n      <h3 className=\"rating\">{ business.rating }</h3>\r\n      <p>{ business.reviewCount }</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map((business) => {\r\n                        return <Business key={business.id} business={business} />;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: '',\r\n\t\t\tlocation: '',\r\n\t\t\tsortBy: 'best_match'\r\n\t\t};\r\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\r\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\r\n\t\tthis.handleSearch = this.handleSearch.bind(this);\r\n\t}\r\n\t\r\n\thandleSearch(event){\r\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\trenderSortByOptions() {\r\n\t\treturn Object.keys(sortByOptions).map(sortByOption => {\r\n\t\t\tlet sortByOptionValue = sortByOptions[sortByOption];\r\n\t\t\treturn (\r\n\t\t\t\t<li className={this.getSortByClass(sortByOptionValue)}\r\n\t\t\t\t\tkey={sortByOptionValue} onClick={this.handleSortByChange.bind(this, sortByOptionValue)} >\r\n\t\t\t\t\t{sortByOption}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\thandleTermChange(event) {\r\n\t\tthis.setState({ term: event.target.value });\r\n\t}\r\n\r\n\thandleLocationChange(event) {\r\n\t\tthis.setState({ location: event.target.value });\r\n\t}\r\n\r\n\tgetSortByClass(sortByOption) {\r\n\t\treturn (sortByOption === this.state.sortBy) ? 'active' : '';\r\n\t}\r\n\r\n\thandleSortByChange(sortByOption){\r\n\t\tthis.setState({ sortBy: sortByOption });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"SearchBar\">\r\n\t\t\t\t<div className=\"SearchBar-sort-options\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.renderSortByOptions()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"SearchBar-fields\">\r\n\t\t\t\t\t<input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n\t\t\t\t\t<input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"SearchBar-submit\">\r\n\t\t\t\t\t<a onClick={ this.handleSearch }>Let's Go</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst sortByOptions = {\r\n\t'Best Match': 'best_match',\r\n\t'Highest Rated': 'rating',\r\n\t'Most Reviewed': 'review_count'\r\n}\r\n\r\nexport default SearchBar;","// Yelp APIkey:\r\n// plIEzShiZ2IRem0bpJ7RZFzFIFDEtlhpH_JYDvi1XBr71Pupz8JRLkFiFbm9E96SeYmSLSu1bPWvCbSt9HbOouwifaY_iA2f1Nd1Iky2uJj7uepmYqHzjfQ4rk8rXHYx\r\n\r\nconst apiKey = 'plIEzShiZ2IRem0bpJ7RZFzFIFDEtlhpH_JYDvi1XBr71Pupz8JRLkFiFbm9E96SeYmSLSu1bPWvCbSt9HbOouwifaY_iA2f1Nd1Iky2uJj7uepmYqHzjfQ4rk8rXHYx';\r\n\r\nconst Yelp = {\r\n    searchYelp(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n        {headers: { Authorization: `Bearer ${apiKey}`}\r\n    }).then((response) => {\r\n        return response.json();\r\n     }).then((jsonResponse) => {\r\n        console.log(jsonResponse);\r\n        if (jsonResponse.businesses) {\r\n            return jsonResponse.businesses.map((business) => {\r\n                \r\n                return {\r\n                    id: business.id,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.location.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.review_count,\r\n                  }\r\n            });\r\n        }\r\n     } );\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Yelp from './util/Yelp';\r\nimport Business from './components/Business/Business';\r\n\r\nexport class App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      businesses: [],\r\n    };\r\n    this.searchYelp = this.searchYelp.bind(this);\r\n  }\r\n  searchYelp(term, location, sortBy) { \r\n\t\tYelp.searchYelp(term, location, sortBy).then((businesses) => {\r\n      this.setState({ businesses: businesses });\r\n    });\r\n\t}\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar searchYelp={ this.searchYelp } />\r\n        <BusinessList businesses={this.state.businesses} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}